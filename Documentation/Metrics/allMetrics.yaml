- category: Agency
  complexity: medium
  description: 'This measures the time an agency follower needs for individual

    append operations resulting from `AppendEntriesRPC` requests.

    '
  exposedBy:
  - agent
  help: 'Agency RAFT follower append histogram.

    '
  name: arangodb_agency_append_hist
  threshold: 'Normally these times should be clearly sub-second.

    '
  troubleshoot: 'If you see delays here, the agents might not have enough IO bandwidth

    or might be overloaded. Try to provision more IOPS or more CPU capacity,

    potentially moving agents to separate machines.

    '
  type: histogram
  unit: ms
- category: Agency
  complexity: advanced
  description: 'This reflects the current number of callbacks the local `AgencyCache`

    has registered.

    '
  exposedBy:
  - agent
  - dbserver
  - coordinator
  help: 'Current number of entries in agency cache callbacks table.

    '
  name: arangodb_agency_cache_callback_count
  threshold: 'This number will usually be very low, something like 2 or 3.

    '
  troubleshoot: 'If this number is considerably higher, this should be investigated.

    Please contact support.

    '
  type: gauge
  unit: number
- category: Agency
  complexity: advanced
  description: 'This metric reflects the current number of agency callbacks being

    registered.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Current number of agency callbacks registered.

    '
  name: arangodb_agency_callback_count
  threshold: 'This number will usually be very low, something like 2 or 3.

    '
  troubleshoot: 'If this number is considerably higher, this should be investigated.

    Please contact support.

    '
  type: gauge
  unit: number
- category: Agency
  complexity: advanced
  description: 'This metric reflects the total number of agency callbacks ever registered

    over time.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total number of agency callbacks ever registered.

    '
  name: arangodb_agency_callback_registered
  type: counter
  unit: number
- category: Agency
  complexity: advanced
  description: 'Current number of entries in agency client id lookup table.

    '
  exposedBy:
  - agent
  help: 'Current number of entries in agency client id lookup table.

    '
  name: arangodb_agency_client_lookup_table_size
  type: gauge
  unit: number
- category: Agency
  complexity: medium
  description: 'Agency RAFT commit time histogram.

    '
  exposedBy:
  - agent
  help: 'Agency RAFT commit histogram.

    '
  name: arangodb_agency_commit_hist
  type: histogram
  unit: ms
- category: Network
  complexity: medium
  description: 'This histogram shows how long requests to the agency took.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Request time for Agency requests.

    '
  name: arangodb_agencycomm_request_time_msec
  threshold: "Usually, such requests should be relatively quick, mostly clearly\nsub-second.
    \n"
  troubleshoot: 'If the network or the agents are overloaded, it can help to move

    agent instances to separate machines.

    '
  type: histogram
  unit: ms
- category: Agency
  complexity: medium
  description: 'Agency compaction time histogram.

    '
  exposedBy:
  - agent
  help: 'Agency compaction time histogram.

    '
  name: arangodb_agency_compaction_hist
  type: histogram
  unit: ms
- category: Agency
  complexity: simple
  description: 'This agent''s commit index.

    '
  exposedBy:
  - agent
  help: 'This agent''s commit index.

    '
  name: arangodb_agency_local_commit_index
  type: gauge
  unit: number
- category: Agency
  complexity: simple
  description: 'Agency replicated log size in bytes.

    '
  exposedBy:
  - agent
  help: 'Agency replicated log size.

    '
  name: arangodb_agency_log_size_bytes
  type: gauge
  unit: bytes
- category: Agency
  complexity: simple
  description: 'Agency read with no leader.

    '
  exposedBy:
  - agent
  help: 'Agency read no leader.

    '
  name: arangodb_agency_read_no_leader
  threshold: 'This should normally not happen. If it happens regularly, the agency

    is reelecting its leader often.

    '
  troubleshoot: 'The latency of the network between the agents might be too high or

    the agents may be overloaded. It might help to move agent instances

    to separate machines.

    '
  type: counter
  unit: number
- category: Agency
  complexity: simple
  description: 'Number of agency read operations which went ok.

    '
  exposedBy:
  - agent
  help: 'Agency read ok.

    '
  name: arangodb_agency_read_ok
  type: counter
  unit: number
- category: Agency
  complexity: simple
  description: 'Accumulated supervision runtime.

    '
  exposedBy:
  - agent
  help: 'Accumulated supervision runtime.

    '
  name: arangodb_agency_supervision_accum_runtime_msec
  type: counter
  unit: ms
- category: Agency
  complexity: medium
  description: 'Accumulated supervision wait for replication time.

    '
  exposedBy:
  - agent
  help: 'Accumulated supervision wait for replication time.

    '
  name: arangodb_agency_supervision_accum_runtime_wait_for_replication_msec
  type: counter
  unit: ms
- category: Agency
  complexity: medium
  description: 'Counter for FailedServer jobs.

    '
  exposedBy:
  - agent
  help: 'Counter for FailedServer jobs.

    '
  name: arangodb_agency_supervision_failed_server_count
  threshold: 'Many FailedServer jobs indicate frequent failures of dbservers. This

    is generally not good.

    '
  troubleshoot: 'Find the root cause of server failures. Overload and bad network
    latency

    can lead to misdetected server failures.

    '
  type: counter
  unit: number
- category: Agency
  complexity: simple
  description: 'Agency Supervision runtime histogram.

    '
  exposedBy:
  - agent
  help: 'Agency Supervision runtime histogram.

    '
  name: arangodb_agency_supervision_runtime_msec
  threshold: 'The supervision runtime goes up linearly with the number of collections

    and shards.

    '
  type: histogram
  unit: ms
- category: Agency
  complexity: medium
  description: 'Agency supervision wait for replication time.

    '
  exposedBy:
  - agent
  help: 'Agency supervision wait for replication time.

    '
  name: arangodb_agency_supervision_runtime_wait_for_replication_msec
  type: histogram
  unit: ms
- category: Agency
  complexity: medium
  description: 'Agency''s term.

    '
  exposedBy:
  - agent
  help: 'Agency''s term.

    '
  name: arangodb_agency_term
  threshold: 'This number should usually not grow. If it does, the agency is doing

    repeated reelections, which suggests overload or bad network latency

    between agents.

    '
  troubleshoot: 'It might help to reduce network latency between agents or move agent

    instances to separate machines.

    '
  type: gauge
  unit: number
- category: Agency
  complexity: medium
  description: 'Agency write time histogram.

    '
  exposedBy:
  - agent
  help: 'Agency write time histogram.

    '
  name: arangodb_agency_write_hist
  type: histogram
  unit: ms
- category: Agency
  complexity: medium
  description: 'Agency write operations with no leader.

    '
  exposedBy:
  - agent
  help: 'Agency write operations with no leader.

    '
  name: arangodb_agency_write_no_leader
  type: counter
  unit: number
- category: Agency
  complexity: medium
  description: 'Agency write operations which went ok.

    '
  exposedBy:
  - agent
  help: 'Agency write operations which went ok.

    '
  name: arangodb_agency_write_ok
  type: counter
  unit: number
- category: AQL
  complexity: simple
  description: 'Total number of AQL queries finished.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total number of AQL queries finished.

    '
  name: arangodb_aql_all_query
  type: counter
  unit: number
- category: AQL
  complexity: simple
  description: 'Current number of AQL queries executing.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Current number of AQL queries executing.

    '
  name: arangodb_aql_current_query
  type: gauge
  unit: number
- category: AQL
  complexity: simple
  description: 'Execution time histogram for all AQL queries.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Execution time histogram for all AQL queries.

    '
  name: arangodb_aql_query_time
  type: histogram
  unit: s
- category: AQL
  complexity: simple
  description: 'Number of slow AQL queries.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Number of slow AQL queries.

    '
  name: arangodb_aql_slow_query
  type: counter
  unit: number
- category: AQL
  complexity: simple
  description: 'Execution time histogram for slow AQL queries.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Execution time histogram for slow AQL queries.

    '
  name: arangodb_aql_slow_query_time
  type: histogram
  unit: s
- category: AQL
  complexity: simple
  description: 'Total execution time of all AQL queries.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total execution time of all AQL queries.

    '
  name: arangodb_aql_total_query_time_msec
  type: histogram
  unit: ms
- category: AQL
  complexity: medium
  description: 'Total amount of collection lock acquisition time.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total amount of collection lock acquisition time.

    '
  name: arangodb_collection_lock_acquisition_micros
  type: counter
  unit: microseconds
- category: AQL
  complexity: medium
  description: 'Collection lock acquisition time histogram.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Collection lock acquisition time histogram.

    '
  name: arangodb_collection_lock_acquisition_time
  type: histogram
  unit: s
- category: AQL
  complexity: advanced
  description: 'Number of transactions using sequential locking of collections to
    avoid deadlocking.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Number of transactions using sequential locking of collections to avoid deadlocking.

    '
  name: arangodb_collection_lock_sequential_mode
  type: counter
  unit: number
- category: AQL
  complexity: medium
  description: 'Number of timeouts when trying to acquire collection exclusive locks.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Number of timeouts when trying to acquire collection exclusive locks.

    '
  name: arangodb_collection_lock_timeouts_exclusive
  type: counter
  unit: number
- category: AQL
  complexity: medium
  description: 'Number of timeouts when trying to acquire collection write locks.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Number of timeouts when trying to acquire collection write locks.

    '
  name: arangodb_collection_lock_timeouts_write
  type: counter
  unit: number
- category: Statistics
  complexity: simple
  description: 'Total number of collection truncate operations (excl. synchronous

    replication). Note that this metric is only present when the command

    line option `--server.export-read-write-metrics` is set to `true`.

    '
  exposedBy:
  - dbserver
  - coordinator
  help: 'Total number of collection truncate operations (excl. synchronous replication).

    '
  name: arangodb_collection_truncates
  type: counter
  unit: number
- category: Statistics
  complexity: medium
  description: 'Total number of collection truncate operations by synchronous

    replication. Note that this metric is only present when the command

    line option `--server.export-read-write-metrics` is set to `true`.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Total number of collection truncate operations by synchronous replication.

    '
  name: arangodb_collection_truncates_replication
  type: counter
  unit: number
- category: Statistics
  complexity: simple
  description: 'Total time spent in collection truncate operations.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Total time spent in collection truncate operations.

    '
  name: arangodb_collection_truncate_time
  type: histogram
  unit: s
- category: Connectivity
  complexity: medium
  description: 'Current number of connections in pool for AgencyComm.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Current number of connections in pool for AgencyComm.

    '
  name: arangodb_connection_connections_current_AgencyComm
  type: gauge
  unit: number
- category: Connectivity
  complexity: medium
  description: 'Current number of connections in pool for ClusterComm.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Current number of connections in pool for ClusterComm.

    '
  name: arangodb_connection_connections_current_ClusterComm
  type: gauge
  unit: number
- category: Connectivity
  complexity: medium
  description: 'Total number of successful connection leases for AgencyComm connection
    pool.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Total number of successful connection leases for AgencyComm connection pool.

    '
  name: arangodb_connection_leases_successful_AgencyComm
  type: counter
  unit: number
- category: Connectivity
  complexity: medium
  description: 'Total number of successful connection leases for ClusterComm connection
    pool.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total number of successful connection leases for ClusterComm connection pool.

    '
  name: arangodb_connection_leases_successful_ClusterComm
  type: counter
  unit: number
- category: Connectivity
  complexity: medium
  description: 'Total number of connections created for AgencyComm connection pool.

    '
  exposedBy:
  - coordinator
  - dbserver
  help: 'Total number of connections created for AgencyComm connection pool.

    '
  name: arangodb_connection_pool_connections_created_AgencyComm
  type: counter
  unit: number
- category: Connectivity
  complexity: medium
  description: 'Total number of connections created for ClusterComm connection pool.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  help: 'Total number of connections created for ClusterComm connection pool.

    '
  name: arangodb_connection_pool_connections_created_ClusterComm
  type: counter
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
- category: Health
  complexity: simple
  description: 'Description here. Can be multiline and use markdown.

    '
  exposedBy:
  - coordinator
  - dbserver
  - agent
  grafana:
    json: '{}'
    query: rate(arangodb_metric[1m]) by (instance)
  help: 'Put the help string here.

    '
  name: arangodb_metric
  threshold: '# optional Optional text to describe thresholds and normal ranges for
    the metrics. Can be multiline markdown.

    '
  troubleshoot: '# optional If at all possible describe hints for troubleshooting
    and how to get metrics in allowable range again.

    '
  type: gauge
  unit: number
